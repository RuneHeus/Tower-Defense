(load "Position.rkt")
(load "Constants.rkt")

(define (make-path start-position end-position)

  (define start (cons start-position (make-position (* size-factor 2) 0)))
  (define path1 (cons (make-position (* size-factor 300) (* size-factor 100)) (make-position 0 (* size-factor 2))))
  (define path2 (cons (make-position (* size-factor 300) (* size-factor 500)) (make-position (* size-factor 2) 0)))
  (define end (cons end-position (make-position 0 0)))
  (display "")
  
  (define path-positions (list start path1 path2 end))
  
  (define (endpoint? monster)
    (((monster 'position) 'equal?) end-position))
  
  (define (dispatch mes)
    (cond ((eq? mes 'start-position) start-position)
          ((eq? mes 'end-position) end-position)
          ((eq? mes 'path-positions) path-positions)
          ((eq? mes 'endpoint?) endpoint?)
          (else (display "Error: Wrong dispatch message (Path.rkt)"))))
  dispatch)
