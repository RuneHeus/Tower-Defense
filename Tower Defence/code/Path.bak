(load "Position.rkt")
(load "Constants.rkt")

(define (make-path start-position end-position)

  (let* ((start start-position)
         (path1 (make-position (* size-factor 300) (* size-factor 100)))
         (path2 (make-position (* size-factor 300) (* size-factor 500)))
         (end end-position))
    (define path-positions (list start path1 path2 end))
  
    (define (endpoint? monster)
      (((monster 'position) 'equal?) end-position))
  
    (define (dispatch mes)
      (cond ((eq? mes 'start-position) start-position)
            ((eq? mes 'end-position) end-position)
            ((eq? mes 'path-positions) path-positions)
            ((eq? mes 'endpoint?) endpoint?)
            (else (display "Error: Wrong dispatch message (Path.rkt)"))))
    dispatch))